// AtmosInsight Lambda Bundle - Auto-generated
var P="(AtmosInsight, contact@atmosinsight.com)",U="https://gibs.earthdata.nasa.gov/wmts",B="https://tile.openweathermap.org/map",L=new Set(["clouds_new","precipitation_new","pressure_new","wind_new","temp_new","rain","snow"]);function $({epsg:c,layer:e,time:d,tms:_,z:n,y:t,x:o,ext:r}){let a=d?`${d}/`:"";return`${U}/epsg${c}/best/${e}/default/${a}${_}/${n}/${t}/${o}.${r}`}function I({epsg:c,layer:e,tms:d,range:_}){return`${U}/epsg${c}/best/1.0.0/${e}/default/${d}/all/${_}.xml`}import{readFileSync as v}from"fs";import{join as D,dirname as k}from"path";import{fileURLToPath as G}from"url";var K=G(import.meta.url),j=k(K),A=null,q="/AtmosInsight/config/ports.json",H=D(j,"..","..","config","ports.json");try{A=JSON.parse(v(q,"utf8"))}catch{try{A=JSON.parse(v(H,"utf8"))}catch{A={proxy:3e3,catalog:3001,web:3002,database:5432}}}var rt={PROXY:A.proxy,CATALOG:A.catalog,WEB:A.web,DATABASE:A.database};async function h(c,e={},d=3,_=1e4,n=500){let t=0,o=n;for(;;)try{let r=AbortSignal.timeout(_),a=e.signal?AbortSignal.any([e.signal,r]):r,u=await fetch(c,{...e,signal:a});if(u.status===429&&t<d){await new Promise(s=>setTimeout(s,o)),o*=2,t++;continue}return u}catch(r){if(t>=d)throw r;await new Promise(a=>setTimeout(a,o)),o*=2,t++}}async function M(c,e){let d=e?process.env[e]:null;return d&&console.log(`Would fetch secret: ${d}`),process.env[c]||""}var Y={"Content-Type":"application/json"};function f(c,e,d={}){return{statusCode:c,headers:{...Y,...d},body:JSON.stringify(e)}}function O(c,e,d={}){return{statusCode:c,headers:d,body:e}}function E(c,e,d,_={}){return{statusCode:c,isBase64Encoded:!0,headers:{"Content-Type":d,..._},body:Buffer.from(e).toString("base64")}}function F({layer:c,z:e,x:d,y:_,apiKey:n}){return`${B}/${c}/${e}/${d}/${_}.png?appid=${encodeURIComponent(n)}`}var T=null,W=0,Q=6e4;async function S(){let c=Date.now();if(T&&c-W<Q)return T;let e=await h("https://api.rainviewer.com/public/weather-maps.json");if(!e.ok)throw new Error(`rainviewer index ${e.status}`);return T=await e.json(),W=c,T}function N({index:c,ts:e,size:d,z:_,x:n,y:t,color:o,options:r}){let a=d==="512"?"512":"256",u=Number(e);if(!Number.isFinite(u))return null;let s=[...c?.radar?.past||[],...c?.radar?.nowcast||[]];if(!s.length)return null;let i=s.find(p=>p.time===u);return i||(i=s.filter(m=>m.time<=u).sort((m,l)=>l.time-m.time)[0]||s.sort((m,l)=>l.time-m.time)[0]),i?`${c.host}${i.path}/${a}/${_}/${n}/${t}/${o}/${r}.png`:null}function w(c={}){return{"Cache-Control":"public, max-age=60",...c}}function z(c={}){return{"Cache-Control":"public, max-age=300",...c}}var ct=async c=>{let e=c.rawPath||"/",d=c.rawQueryString?`?${c.rawQueryString}`:"",_=c.requestContext?.http?.method||"GET";try{if(e.startsWith("/api/catalog/")){let t=(process.env.CATALOG_API_BASE||"").replace(/\/$/,"");if(!t)return f(503,{error:"CATALOG_API_BASE not configured"});let o=`${t}${e.replace("/api","")}${d}`,r=await h(o,{}),a=await r.text();return O(r.status,a,w({"Content-Type":r.headers.get("content-type")||"application/json"}))}if(e==="/api/healthz")return O(200,"ok",{"Content-Type":"text/plain"});if(e.startsWith("/api/nws/alerts")){let t=process.env.NWS_USER_AGENT||P,o="https://api.weather.gov"+e.replace("/api/nws","")+d,r=await h(o,{headers:{"User-Agent":t,Accept:"application/geo+json"}}),a=await r.text();return{statusCode:r.status,headers:w({"Content-Type":r.headers.get("content-type")||"application/geo+json"}),body:a}}let n=e.match(/^\/api\/owm\/([^/]+)\/(\d+)\/(\d+)\/(\d+)\.png$/);if(n){let[,t,o,r,a]=n;if(!L.has(t))return f(400,{error:"unknown or blocked layer"});let u=await M("OPENWEATHER_API_KEY","OPENWEATHER_API_KEY_SECRET");if(!u)return f(503,{error:"OPENWEATHER_API_KEY not configured"});let s=F({layer:t,z:o,x:r,y:a,apiKey:u}),i=await h(s,{}),p=Buffer.from(await i.arrayBuffer());return E(i.status,p,i.headers.get("content-type")||"image/png",w())}if(n=e.match(/^\/api\/osm\/cyclosm\/(\d+)\/(\d+)\/(\d+)\.png$/),n){let[,t,o,r]=n,a=["a","b","c"],u=null;for(let s of a)try{let i=`https://${s}.tile.openstreetmap.fr/cyclosm/${t}/${o}/${r}.png`,p=await h(i,{headers:{"User-Agent":process.env.NWS_USER_AGENT||P,Accept:"image/png,image/*,*/*"},signal:AbortSignal.timeout(5e3)});if(p.ok){let m=Buffer.from(await p.arrayBuffer());return E(200,m,p.headers.get("content-type")||"image/png",z())}}catch(i){u=i;continue}return f(503,{error:"OpenStreetMap tile servers unavailable",detail:String(u??"")})}if(n=e.match(/^\/api\/tracestrack\/([^/]+)\/(\d+)\/(\d+)\/(\d+)\.webp$/),n){let[,t,o,r,a]=n,u=await M("TRACESTRACK_API_KEY","TRACESTRACK_API_KEY_SECRET");if(!u)return f(503,{error:"TRACESTRACK_API_KEY not configured"});let i=new URLSearchParams(c.rawQueryString||"").get("style"),p=i?`&style=${encodeURIComponent(i)}`:"",m=`https://tile.tracestrack.com/${t}/${o}/${r}/${a}.webp?key=${encodeURIComponent(u)}${p}`,l=await h(m,{}),y=Buffer.from(await l.arrayBuffer());return E(l.status,y,l.headers.get("content-type")||"image/webp",z())}if(e==="/api/rainviewer/index.json"){let t=await S();return f(200,t,w())}if(n=e.match(/^\/api\/rainviewer\/(\d+)\/(256|512)\/(\d+)\/(\d+)\/(\d+)\/([^/]+)\/([^/]+)\.png$/),n){let[,t,o,r,a,u,s,i]=n,p=await S(),m=N({index:p,ts:t,size:o,z:r,x:a,y:u,color:s,options:i});if(!m)return f(404,{error:"frame not found"});let l=await h(m,{}),y=Buffer.from(await l.arrayBuffer());return E(l.status,y,l.headers.get("content-type")||"image/png",w())}if(n=e.match(/^\/api\/rainviewer\/(\d+)\/(\d+)\/(\d+)\/(256|512)\/([^/]+)\/([^/]+)\.png$/),n){let[,t,o,r,a,u,s]=n,i=await S(),m=[...i?.radar?.past||[],...i?.radar?.nowcast||[]].sort((g,R)=>R.time-g.time)[0]?.time;if(!m)return f(404,{error:"no frames"});let l=N({index:i,ts:String(m),size:a,z:t,x:o,y:r,color:u,options:s});if(!l)return f(404,{error:"frame not found"});let y=await h(l,{}),x=Buffer.from(await y.arrayBuffer());return E(y.status,x,y.headers.get("content-type")||"image/png",w())}if(n=e.match(/^\/api\/rainviewer\/(\d+)\/(\d+)\/(\d+)\.png$/),n){let[,t,o,r]=n,a=await S(),s=[...a?.radar?.past||[],...a?.radar?.nowcast||[]].sort((l,y)=>y.time-l.time)[0]?.time;if(!s)return f(404,{error:"no frames"});let i=N({index:a,ts:String(s),size:"256",z:t,x:o,y:r,color:"0",options:"1_0"});if(!i)return f(404,{error:"frame not found"});let p=await h(i,{}),m=Buffer.from(await p.arrayBuffer());return E(p.status,m,p.headers.get("content-type")||"image/png",w())}if(e==="/api/gibs/redirect"){let t=new URLSearchParams(c.rawQueryString||""),o=t.get("layer"),r=t.get("epsg"),a=t.get("time")||void 0,u=t.get("tms"),s=t.get("z"),i=t.get("y"),p=t.get("x"),m=t.get("ext")||"png";if(!o||!r||!u||!s||!i||!p)return f(400,{error:"missing params"});let l=$({epsg:r,layer:o,time:a,tms:u,z:s,y:i,x:p,ext:m});return l.startsWith("https://gibs.earthdata.nasa.gov/")?{statusCode:302,headers:{Location:l,...w()},body:""}:f(400,{error:"invalid redirect"})}if(n=e.match(/^\/api\/gibs\/tile\/(\d+)\/([^/]+)\/([^/]+)\/([^/]+)\/(\d+)\/(\d+)\/(\d+)\.([a-zA-Z0-9]+)$/),n){let[,t,o,r,a,u,s,i,p]=n,m=$({epsg:t,layer:o,time:r,tms:a,z:u,y:s,x:i,ext:p}),l=await h(m,{}),y=Buffer.from(await l.arrayBuffer());return E(l.status,y,l.headers.get("content-type")||"image/png",w())}if(n=e.match(/^\/api\/gibs\/tile\/(\d+)\/([^/]+)\/([^/]+)\/(\d+)\/(\d+)\/(\d+)\.([a-zA-Z0-9]+)$/),n){let[,t,o,r,a,u,s,i]=n,p=$({epsg:t,layer:o,tms:r,z:a,y:u,x:s,ext:i}),m=await h(p,{}),l=Buffer.from(await m.arrayBuffer());return E(m.status,l,m.headers.get("content-type")||"image/png",w())}if(n=e.match(/^\/api\/gibs\/domains\/(\d+)\/([^/]+)\/([^/]+)\/([^/]+)\.xml$/),n){let[,t,o,r,a]=n,u=I({epsg:t,layer:o,tms:r,range:a}),s=await h(u,{}),i=await s.text();return O(s.status,i,w({"Content-Type":s.headers.get("content-type")||"application/xml"}))}if(e==="/api/forecast"){let t=new URLSearchParams(c.rawQueryString||""),o=t.get("lat"),r=t.get("lon"),a=t.get("units")||"metric",u=t.get("source")||"openmeteo";if(!o||!r)return f(400,{error:"lat and lon parameters required"});let s=parseFloat(o),i=parseFloat(r);if(isNaN(s)||isNaN(i))return f(400,{error:"invalid lat/lon values"});try{let y=`https://api.open-meteo.com/v1/forecast?latitude=${s}&longitude=${i}&current=temperature_2m,relative_humidity_2m,apparent_temperature,pressure_msl,wind_speed_10m,wind_direction_10m,weather_code&hourly=temperature_2m,weather_code,precipitation_probability&daily=temperature_2m_max,temperature_2m_min,weather_code,precipitation_probability_max&temperature_unit=${a==="imperial"?"fahrenheit":"celsius"}&wind_speed_unit=${a==="imperial"?"mph":"kmh"}&precipitation_unit=${a==="imperial"?"inch":"mm"}&forecast_days=7`,x=await h(y);if(!x.ok)throw new Error(`Open-Meteo API error: ${x.status}`);let g=await x.json(),R={current:{temp:g.current?.temperature_2m,feels_like:g.current?.apparent_temperature,humidity:g.current?.relative_humidity_2m,pressure:g.current?.pressure_msl,wind_speed:g.current?.wind_speed_10m,wind_deg:g.current?.wind_direction_10m,weather_code:g.current?.weather_code,dt:Math.floor(Date.now()/1e3)},hourly:g.hourly?.time?.slice(0,24)?.map((C,b)=>({dt:Math.floor(new Date(C).getTime()/1e3),temp:g.hourly?.temperature_2m?.[b],weather_code:g.hourly?.weather_code?.[b],pop:g.hourly?.precipitation_probability?.[b]})),daily:g.daily?.time?.slice(0,7)?.map((C,b)=>({dt:Math.floor(new Date(C).getTime()/1e3),temp_min:g.daily?.temperature_2m_min?.[b],temp_max:g.daily?.temperature_2m_max?.[b],weather_code:g.daily?.weather_code?.[b],pop:g.daily?.precipitation_probability_max?.[b]}))};return f(200,R,w())}catch(p){return console.error("Forecast error:",p),f(503,{error:"forecast service unavailable",detail:String(p)})}}if(n=e.match(/^\/api\/glm-toe\/(\d+)\/(\d+)\/(\d+)\.png$/),n){let t=process.env.GLM_TOE_PY_URL;if(!t)return f(503,{error:"GLM_TOE_PY_URL not configured"});let[,o,r,a]=n,u=`${t.replace(/\/$/,"")}/${o}/${r}/${a}.png${d}`;try{let s=await h(u,{},2,8e3),i=Buffer.from(await s.arrayBuffer());return E(s.status,i,s.headers.get("content-type")||"image/png",w())}catch(s){return f(503,{error:"GLM service unavailable",detail:String(s)})}}return e.startsWith("/api/")?f(404,{error:"not found",path:e}):f(400,{error:"bad request"})}catch(n){return console.error(n),f(500,{error:"proxy error"})}};export{ct as handler};
