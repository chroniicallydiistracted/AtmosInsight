// AtmosInsight Lambda Bundle - Auto-generated
var O="(AtmosInsight, contact@atmosinsight.com)",L="https://gibs.earthdata.nasa.gov/wmts",B="https://tile.openweathermap.org/map",I=new Set(["clouds_new","precipitation_new","pressure_new","wind_new","temp_new","rain","snow"]);function x({epsg:c,layer:e,time:d,tms:y,z:n,y:t,x:o,ext:r}){let a=d?`${d}/`:"";return`${L}/epsg${c}/best/${e}/default/${a}${y}/${n}/${t}/${o}.${r}`}function v({epsg:c,layer:e,tms:d,range:y}){return`${L}/epsg${c}/best/1.0.0/${e}/default/${d}/all/${y}.xml`}import{readFileSync as M}from"fs";import{join as G,dirname as k}from"path";import{fileURLToPath as K}from"url";var j=K(import.meta.url),H=k(j),b=null,q="/AtmosInsight/config/ports.json",Y=G(H,"..","..","config","ports.json");try{b=JSON.parse(M(q,"utf8"))}catch{try{b=JSON.parse(M(Y,"utf8"))}catch{b={proxy:3e3,catalog:3001,web:3002,database:5432}}}var nt={PROXY:b.proxy,CATALOG:b.catalog,WEB:b.web,DATABASE:b.database};async function h(c,e={},d=3,y=1e4,n=500){let t=0,o=n;for(;;)try{let r=AbortSignal.timeout(y),a=e.signal?AbortSignal.any([e.signal,r]):r,u=await fetch(c,{...e,signal:a});if(u.status===429&&t<d){await new Promise(s=>setTimeout(s,o)),o*=2,t++;continue}return u}catch(r){if(t>=d)throw r;await new Promise(a=>setTimeout(a,o)),o*=2,t++}}async function W(c,e){let d=e?process.env[e]:null;return d&&console.log(`Would fetch secret: ${d}`),process.env[c]||""}var F={"Content-Type":"application/json"},R={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, PUT, DELETE, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization, X-Requested-With","Access-Control-Max-Age":"86400"};function f(c,e,d={}){return{statusCode:c,headers:{...F,...R,...d},body:JSON.stringify(e)}}function N(c,e,d={}){return{statusCode:c,headers:{...R,...d},body:e}}function E(c,e,d,y={}){return{statusCode:c,isBase64Encoded:!0,headers:{"Content-Type":d,...R,...y},body:Buffer.from(e).toString("base64")}}function Q({layer:c,z:e,x:d,y,apiKey:n}){return`${B}/${c}/${e}/${d}/${y}.png?appid=${encodeURIComponent(n)}`}var $=null,z=0,J=6e4;async function S(){let c=Date.now();if($&&c-z<J)return $;let e=await h("https://api.rainviewer.com/public/weather-maps.json");if(!e.ok)throw new Error(`rainviewer index ${e.status}`);return $=await e.json(),z=c,$}function U({index:c,ts:e,size:d,z:y,x:n,y:t,color:o,options:r}){let a=d==="512"?"512":"256",u=Number(e);if(!Number.isFinite(u))return null;let s=[...c?.radar?.past||[],...c?.radar?.nowcast||[]];if(!s.length)return null;let i=s.find(p=>p.time===u);return i||(i=s.filter(m=>m.time<=u).sort((m,l)=>l.time-m.time)[0]||s.sort((m,l)=>l.time-m.time)[0]),i?`${c.host}${i.path}/${a}/${y}/${n}/${t}/${o}/${r}.png`:null}function _(c={}){return{"Cache-Control":"public, max-age=60",...c}}function D(c={}){return{"Cache-Control":"public, max-age=300",...c}}var ut=async c=>{let e=c.rawPath||"/",d=c.rawQueryString?`?${c.rawQueryString}`:"",y=c.requestContext?.http?.method||"GET";try{if(y==="OPTIONS")return{statusCode:200,headers:R,body:""};if(e.startsWith("/api/catalog/")){let t=(process.env.CATALOG_API_BASE||"").replace(/\/$/,"");if(!t)return f(503,{error:"CATALOG_API_BASE not configured"});let o=`${t}${e.replace("/api","")}${d}`,r=await h(o,{}),a=await r.text();return N(r.status,a,_({"Content-Type":r.headers.get("content-type")||"application/json"}))}if(e==="/api/healthz")return N(200,"ok",{"Content-Type":"text/plain"});if(e.startsWith("/api/nws/alerts")){let t=process.env.NWS_USER_AGENT||O,o="https://api.weather.gov"+e.replace("/api/nws","")+d,r=await h(o,{headers:{"User-Agent":t,Accept:"application/geo+json"}}),a=await r.text();return{statusCode:r.status,headers:_({"Content-Type":r.headers.get("content-type")||"application/geo+json"}),body:a}}let n=e.match(/^\/api\/owm\/([^/]+)\/(\d+)\/(\d+)\/(\d+)\.png$/);if(n){let[,t,o,r,a]=n;if(!I.has(t))return f(400,{error:"unknown or blocked layer"});let u=await W("OPENWEATHER_API_KEY","OPENWEATHER_API_KEY_SECRET");if(!u)return f(503,{error:"OPENWEATHER_API_KEY not configured"});let s=Q({layer:t,z:o,x:r,y:a,apiKey:u}),i=await h(s,{}),p=Buffer.from(await i.arrayBuffer());return E(i.status,p,i.headers.get("content-type")||"image/png",_())}if(n=e.match(/^\/api\/osm\/cyclosm\/(\d+)\/(\d+)\/(\d+)\.png$/),n){let[,t,o,r]=n,a=["a","b","c"],u=null;for(let s of a)try{let i=`https://${s}.tile.openstreetmap.fr/cyclosm/${t}/${o}/${r}.png`,p=await h(i,{headers:{"User-Agent":process.env.NWS_USER_AGENT||O,Accept:"image/png,image/*,*/*"},signal:AbortSignal.timeout(5e3)});if(p.ok){let m=Buffer.from(await p.arrayBuffer());return E(200,m,p.headers.get("content-type")||"image/png",D())}}catch(i){u=i;continue}return f(503,{error:"OpenStreetMap tile servers unavailable",detail:String(u??"")})}if(n=e.match(/^\/api\/tracestrack\/([^/]+)\/(\d+)\/(\d+)\/(\d+)\.webp$/),n){let[,t,o,r,a]=n,u=await W("TRACESTRACK_API_KEY","TRACESTRACK_API_KEY_SECRET");if(!u)return f(503,{error:"TRACESTRACK_API_KEY not configured"});let i=new URLSearchParams(c.rawQueryString||"").get("style"),p=i?`&style=${encodeURIComponent(i)}`:"",m=`https://tile.tracestrack.com/${t}/${o}/${r}/${a}.webp?key=${encodeURIComponent(u)}${p}`,l=await h(m,{}),w=Buffer.from(await l.arrayBuffer());return E(l.status,w,l.headers.get("content-type")||"image/webp",D())}if(e==="/api/rainviewer/index.json"){let t=await S();return f(200,t,_())}if(n=e.match(/^\/api\/rainviewer\/(\d+)\/(256|512)\/(\d+)\/(\d+)\/(\d+)\/([^/]+)\/([^/]+)\.png$/),n){let[,t,o,r,a,u,s,i]=n,p=await S(),m=U({index:p,ts:t,size:o,z:r,x:a,y:u,color:s,options:i});if(!m)return f(404,{error:"frame not found"});let l=await h(m,{}),w=Buffer.from(await l.arrayBuffer());return E(l.status,w,l.headers.get("content-type")||"image/png",_())}if(n=e.match(/^\/api\/rainviewer\/(\d+)\/(\d+)\/(\d+)\/(256|512)\/([^/]+)\/([^/]+)\.png$/),n){let[,t,o,r,a,u,s]=n,i=await S(),m=[...i?.radar?.past||[],...i?.radar?.nowcast||[]].sort((g,C)=>C.time-g.time)[0]?.time;if(!m)return f(404,{error:"no frames"});let l=U({index:i,ts:String(m),size:a,z:t,x:o,y:r,color:u,options:s});if(!l)return f(404,{error:"frame not found"});let w=await h(l,{}),T=Buffer.from(await w.arrayBuffer());return E(w.status,T,w.headers.get("content-type")||"image/png",_())}if(n=e.match(/^\/api\/rainviewer\/(\d+)\/(\d+)\/(\d+)\.png$/),n){let[,t,o,r]=n,a=await S(),s=[...a?.radar?.past||[],...a?.radar?.nowcast||[]].sort((l,w)=>w.time-l.time)[0]?.time;if(!s)return f(404,{error:"no frames"});let i=U({index:a,ts:String(s),size:"256",z:t,x:o,y:r,color:"0",options:"1_0"});if(!i)return f(404,{error:"frame not found"});let p=await h(i,{}),m=Buffer.from(await p.arrayBuffer());return E(p.status,m,p.headers.get("content-type")||"image/png",_())}if(e==="/api/gibs/redirect"){let t=new URLSearchParams(c.rawQueryString||""),o=t.get("layer"),r=t.get("epsg"),a=t.get("time")||void 0,u=t.get("tms"),s=t.get("z"),i=t.get("y"),p=t.get("x"),m=t.get("ext")||"png";if(!o||!r||!u||!s||!i||!p)return f(400,{error:"missing params"});let l=x({epsg:r,layer:o,time:a,tms:u,z:s,y:i,x:p,ext:m});return l.startsWith("https://gibs.earthdata.nasa.gov/")?{statusCode:302,headers:{Location:l,..._()},body:""}:f(400,{error:"invalid redirect"})}if(n=e.match(/^\/api\/gibs\/tile\/(\d+)\/([^/]+)\/([^/]+)\/([^/]+)\/(\d+)\/(\d+)\/(\d+)\.([a-zA-Z0-9]+)$/),n){let[,t,o,r,a,u,s,i,p]=n,m=x({epsg:t,layer:o,time:r,tms:a,z:u,y:s,x:i,ext:p}),l=await h(m,{}),w=Buffer.from(await l.arrayBuffer());return E(l.status,w,l.headers.get("content-type")||"image/png",_())}if(n=e.match(/^\/api\/gibs\/tile\/(\d+)\/([^/]+)\/([^/]+)\/(\d+)\/(\d+)\/(\d+)\.([a-zA-Z0-9]+)$/),n){let[,t,o,r,a,u,s,i]=n,p=x({epsg:t,layer:o,tms:r,z:a,y:u,x:s,ext:i}),m=await h(p,{}),l=Buffer.from(await m.arrayBuffer());return E(m.status,l,m.headers.get("content-type")||"image/png",_())}if(n=e.match(/^\/api\/gibs\/domains\/(\d+)\/([^/]+)\/([^/]+)\/([^/]+)\.xml$/),n){let[,t,o,r,a]=n,u=v({epsg:t,layer:o,tms:r,range:a}),s=await h(u,{}),i=await s.text();return N(s.status,i,_({"Content-Type":s.headers.get("content-type")||"application/xml"}))}if(e==="/api/forecast"){let t=new URLSearchParams(c.rawQueryString||""),o=t.get("lat"),r=t.get("lon"),a=t.get("units")||"metric",u=t.get("source")||"openmeteo";if(!o||!r)return f(400,{error:"lat and lon parameters required"});let s=parseFloat(o),i=parseFloat(r);if(isNaN(s)||isNaN(i))return f(400,{error:"invalid lat/lon values"});try{let w=`https://api.open-meteo.com/v1/forecast?latitude=${s}&longitude=${i}&current=temperature_2m,relative_humidity_2m,apparent_temperature,pressure_msl,wind_speed_10m,wind_direction_10m,weather_code&hourly=temperature_2m,weather_code,precipitation_probability&daily=temperature_2m_max,temperature_2m_min,weather_code,precipitation_probability_max&temperature_unit=${a==="imperial"?"fahrenheit":"celsius"}&wind_speed_unit=${a==="imperial"?"mph":"kmh"}&precipitation_unit=${a==="imperial"?"inch":"mm"}&forecast_days=7`,T=await h(w);if(!T.ok)throw new Error(`Open-Meteo API error: ${T.status}`);let g=await T.json(),C={current:{temp:g.current?.temperature_2m,feels_like:g.current?.apparent_temperature,humidity:g.current?.relative_humidity_2m,pressure:g.current?.pressure_msl,wind_speed:g.current?.wind_speed_10m,wind_deg:g.current?.wind_direction_10m,weather_code:g.current?.weather_code,dt:Math.floor(Date.now()/1e3)},hourly:g.hourly?.time?.slice(0,24)?.map((P,A)=>({dt:Math.floor(new Date(P).getTime()/1e3),temp:g.hourly?.temperature_2m?.[A],weather_code:g.hourly?.weather_code?.[A],pop:g.hourly?.precipitation_probability?.[A]})),daily:g.daily?.time?.slice(0,7)?.map((P,A)=>({dt:Math.floor(new Date(P).getTime()/1e3),temp_min:g.daily?.temperature_2m_min?.[A],temp_max:g.daily?.temperature_2m_max?.[A],weather_code:g.daily?.weather_code?.[A],pop:g.daily?.precipitation_probability_max?.[A]}))};return f(200,C,_())}catch(p){return console.error("Forecast error:",p),f(503,{error:"forecast service unavailable",detail:String(p)})}}if(n=e.match(/^\/api\/glm-toe\/(\d+)\/(\d+)\/(\d+)\.png$/),n){let t=process.env.GLM_TOE_PY_URL;if(!t)return f(503,{error:"GLM_TOE_PY_URL not configured"});let[,o,r,a]=n,u=`${t.replace(/\/$/,"")}/${o}/${r}/${a}.png${d}`;try{let s=await h(u,{},2,8e3),i=Buffer.from(await s.arrayBuffer());return E(s.status,i,s.headers.get("content-type")||"image/png",_())}catch(s){return f(503,{error:"GLM service unavailable",detail:String(s)})}}return e.startsWith("/api/")?f(404,{error:"not found",path:e}):f(400,{error:"bad request"})}catch(n){return console.error(n),f(500,{error:"proxy error"})}};export{ut as handler};
