// AtmosInsight Lambda Bundle - Auto-generated
import o from"node:fs/promises";import s from"node:path";import{fileURLToPath as d}from"node:url";var l=d(import.meta.url),y=s.dirname(l),c=y,u=s.join(c,"layers.json"),p=s.join(c,"times.json");async function f(){let t=await o.readFile(u,"utf8");return JSON.parse(t)}async function g(t){let e=await o.readFile(p,"utf8");return JSON.parse(e)[t]||[]}async function b(t){let e=t.rawPath||"";if(e==="/health")return{statusCode:200,headers:{"content-type":"application/json"},body:JSON.stringify({status:"ok"})};if(e==="/catalog/layers"){let n=await f();return{statusCode:200,headers:{"content-type":"application/json"},body:JSON.stringify(n)}}let r=e.match(/^\/catalog\/layers\/([^\/]+)\/times$/);if(r){let n=r[1],a=t.queryStringParameters?.limit?Number(t.queryStringParameters.limit):void 0,i=await g(n),m=a?i.slice(0,a):i;return{statusCode:200,headers:{"content-type":"application/json"},body:JSON.stringify(m)}}return{statusCode:404,headers:{"content-type":"text/plain"},body:"not found"}}export{b as handler};
